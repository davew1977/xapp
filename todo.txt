BUG/IMPROVEMENT: {
    if you move say, jamiec from alfriston school to berwick, any existing references to jamiec cannot currently be handled. Effectively absolute
    paths for reference objects to not work. It might be that this is not always desirable - but for now it seems reasonable to require that all
    jamiec's references are removed before he can be moved to berwick.

    Ultimately, I guess things should "just work" which means that remaining references to jamiec must save as absolute paths. Trouble is, on unmarshalling
    the pending ref tasks are tied to the Alfriston School object and are flushed when alfriston has finished unmarshalling. Berwick has  not been unmarshalled at that point and
    so the reference cannot be set

    this made me think that the lookupMap and lookupSet in ObjectMeta is foolish. Why can't look ups by path just be recursive instead and walk the tree? must have less scope
    for error. then absolute paths and paths with "../" can be handled too. Also, when unmarshalling, if the flushpending refs cannot be fulfilled, then the
    unsettable refs should be pushed up the hierarchy where they can be tried again
}


REFACTOR: standalone node update api should not be used by the incoming changes adaptor, the jtree updates should be decoupled from the model updates

BUG: create person no longer working

DONE: create delta limit, max no of deltas that a client can be behind before server will choose the send the entire state instead

BUG: client not notified if user disconnects

DONE: BUG: create embedded object - should create an object on the server instead of locally, and

implement difference in UI updates based on whether it was "me" or someone else doing the update

implement prop priority, to allow simplified editor, which will expand for the advanced properties


add a "package" class which can extend dirmeta, but will allow providing an alias for the package name to improve usability in the editor

DONE: paste xml not working when there is a reference in the pasted object
DONE: prevent module from being a namespace for the java files
POSTPONE: (statically widened them instead) auto widen reference drop downs
DONE: figure out how to specify a special path separator
DONE: list property annotation should also apply to the generated xml

DONE: create a xapp-codegen module {
    problem here will be all the ng references
}

module structure {
    xapp-net {
        xapp-server-fwk
        xapp-common-fwk
        xapp-client-fwk
    }
    xapp-obj-server {
        xapp-obj-server
        xapp-obj-client
    }
    xapp-web (an adaptor to allow running xapp obj server inside a tomcat/spring mvc container
}

move ng-fwk-common to xapp-common-fwk

Lookup (net.sf.xapp.common.fwk) should be an interface.. Would be required when we have a binary serialization version of xapp -obj server

assume xml serialization of objects {
    on initial load of model
    when broadcasting new objects in the tree
}

MILESTONE
first version {
    no storage except for a periodic check in
    xml for client server transport (on top of binary protocol "objadded" "objremoved" etc
    obj ids last per jvm, checked in model does not persist object ids

}
